version: "3"
silent: true

env:
  K3D_REGISTRY_IMPORTER_IMAGE: k3d-registry.virtualization-controller.test:5000/cdi-registry-importer:latest
  DECKHOUSE_REGISTRY_IMPORTER_IMAGE: dev-registry.deckhouse.io/virt/virtualization-importer:latest
  K3D_REGISTRY_UPLOADER_IMAGE: k3d-registry.virtualization-controller.test:5000/cdi-registry-uploader:latest
  DECKHOUSE_REGISTRY_UPLOADER_IMAGE: dev-registry.deckhouse.io/virt/virtualization-uploader:latest

tasks:
  importer:build:
    desc: "build importer image"
    cmds:
      - docker build -t cdi-registry-importer:latest -f cdi-registry-importer.Dockerfile .

  uploader:build:
    desc: "build uploader image"
    cmds:
      - docker build -t cdi-registry-uploader:latest -f cdi-registry-uploader.Dockerfile .

  importer:k3d-registry:push:
    desc: "build importer image and push to local k3d registry"
    cmds:
      - task: importer:build
      - docker tag cdi-registry-importer:latest ${K3D_REGISTRY_IMPORTER_IMAGE}
      - docker push ${K3D_REGISTRY_IMPORTER_IMAGE}

  uploader:k3d-registry:push:
    desc: "build uploader image and push to local k3d registry"
    cmds:
      - task: uploader:build
      - docker tag cdi-registry-uploader:latest ${K3D_REGISTRY_UPLOADER_IMAGE}
      - docker push ${K3D_REGISTRY_UPLOADER_IMAGE}

  importer:d8-registry:push:
    desc: "build importer image and push to dev deckhouse registry"
    cmds:
      - task: importer:build
      - docker tag cdi-registry-importer:latest ${DECKHOUSE_REGISTRY_IMPORTER_IMAGE}
      - docker push ${DECKHOUSE_REGISTRY_IMPORTER_IMAGE}

  uploader:d8-registry:push:
    desc: "build uploader image and push to dev deckhouse registry"
    cmds:
      - task: uploader:build
      - docker tag cdi-registry-uploader:latest ${DECKHOUSE_REGISTRY_UPLOADER_IMAGE}
      - docker push ${DECKHOUSE_REGISTRY_UPLOADER_IMAGE}

  lint:
    desc: "Run linters locally"
    cmds:
      - task: lint:go

  lint:go:
    desc: "Run golangci-lint"
    deps:
      - _ensure:golangci-lint
    cmds:
      - |
        golangci-lint run --sort-results

  _ensure:golangci-lint:
    desc: "Ensure golangci-lint is available"
    cmds:
      - |
        echo -e >&2 "Please install golangci-lint https://golangci-lint.run/usage/install/"
        exit 1
    status:
      - |
        [ -f ./golangci-lint ] || which golangci-lint